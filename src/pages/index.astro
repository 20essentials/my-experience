---
import Layout from '@/layouts/Layout.astro';
import TechStack from '@/data/technologies.json';
---

<Layout>
  {
    Array.from({ length: 100 }, (_, i) => {
      const {
        name = 'imagen',
        web = '/',
        src = './assets/transparentimage.png',
        color = 'transparent',
        notExists
      } = TechStack[i] || {};
      return (
        <a
          class={`card ${notExists ? 'opaco' : ''}`}
          href={web}
          title={name}
          style={`--clr: ${color};`}
        >
          <img src={src} alt={name} />
        </a>
      );
    })
  }
</Layout>

<script>
  function handleMove(e: TouchEvent | MouseEvent) {
    const card = e.target as HTMLElement;
    if (card.matches('.card')) {
      const { pageX, pageY } = e instanceof TouchEvent ? e.touches[0] : e;
      const x = pageX - card.offsetLeft;
      const y = pageY - card.offsetTop;
      card.style.setProperty('--x', `${x}px`);
      card.style.setProperty('--y', `${y}px`);
    }
  }

  document.addEventListener('mousemove', handleMove);
  document.addEventListener('touchmove', handleMove, { passive: true})
</script>

<style>
  .card {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    place-content: center;
    flex-grow: 1;
    max-height: 20vh;
    position: relative;
    width: 10%;
    overflow: hidden;
    aspect-ratio: 1 / 1;

    &:focus {
      border: none;
      outline: none;
      box-shadow: inset 0 0 50px var(--clr, #0f0);
    }

    &.opaco {
      img {
        opacity: 0.2;
      }
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      pointer-events: none;
    }

    &::before {
      background-color: #2228;
      inset: 0.2vmax;
      z-index: 3;
    }

    &:hover {
      &::after {
        opacity: 1;
      }
    }

    &::after {
      z-index: 1;
      width: 200%;
      height: 200%;
      background-image: radial-gradient(
        var(--clr, #0f0),
        transparent,
        transparent
      );
      transform: translate(-50%, -50%);
      top: var(--y, 0px);
      left: var(--x, 0px);
      opacity: 0;
      transition: opacity 0.2s ease;
    }

    @media (width <= 1111px) and (orientation: portrait) {
      width: 20%;
      height: 10%;
    }

    img {
      width: 40%;
      position: relative;
      z-index: 5;
      pointer-events: none;
    }
  }
</style>
